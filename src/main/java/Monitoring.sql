/*
 * The MIT License
 *
 * Copyright 2018 1.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * Author:  1
 * Created: 12.05.2018
 */

CREATE TABLE CURRENT_PARAMS (
   	PARAMS_ID int NOT NULL,
	VAL int NOT NULL,
	DELTA int NOT NULL,
	VAL_DATE TIMESTAMP NOT NULL,
	ALARM_DATE TIMESTAMP,
	AVAILABLE int NOT NULL DEFAULT 1
   );
COMMENT ON COLUMN CURRENT_PARAMS.PARAMS_ID IS 'ID проверяемого параметра';
COMMENT ON COLUMN CURRENT_PARAMS.VAL IS 'значение параметра';
COMMENT ON COLUMN CURRENT_PARAMS.DELTA IS 'изменение параметра (изменение относительно предыдущего значения)';
COMMENT ON COLUMN CURRENT_PARAMS.VAL_DATE IS 'дата и время измерения значения параметра';
COMMENT ON COLUMN CURRENT_PARAMS.ALARM_DATE IS 'если не пусто, то дата начала инцидента';
COMMENT ON COLUMN CURRENT_PARAMS.AVAILABLE IS 'доступность параметра';
COMMENT ON TABLE  CURRENT_PARAMS IS 'текущие значения параметров';

CREATE TABLE DB_CONNECTION (	
    ID INT NOT NULL,
    "NAME" VARCHAR(25) NOT NULL,
    DATA_SOURCE VARCHAR(25)  NOT NULL,
    NOTE VARCHAR(25)
 );
 COMMENT ON COLUMN "MONITORING"."DB_CONNECTION"."ID" IS 'уникальный номер соединения';
 COMMENT ON COLUMN "MONITORING"."DB_CONNECTION"."NAME" IS 'краткое наименование соединения';
 COMMENT ON COLUMN "MONITORING"."DB_CONNECTION"."CONNECTION" IS 'контекст соединения в Tomcat';
 COMMENT ON COLUMN "MONITORING"."DB_CONNECTION"."NOTE" IS 'описание';

 CREATE TABLE ERRORS (
    EVENT_DATE TIMESTAMP,
    CLASS_NAME VARCHAR(30),
    METHOD_NAME VARCHAR(30),
    PARAM_ID INT,
    SHORT_MESSAGE VARCHAR(100),
    DETAIL_MESSAGE VARCHAR(4000)
 );


CREATE TABLE HISTORY_PARAMS (
    PARAMS_ID INT NOT NULL,
    VAL INT NOT NULL,
    VAL_DATE TIMESTAMP NOT NULL
);
 COMMENT ON COLUMN "MONITORING"."HISTORY_PARAMS"."PARAMS_ID" IS 'ID джоба или проверяемого параметра';
 COMMENT ON COLUMN "MONITORING"."HISTORY_PARAMS"."VAL" IS 'Значение параметра';
 COMMENT ON COLUMN "MONITORING"."HISTORY_PARAMS"."VAL_DATE" IS 'Дата измерения параметра';
 COMMENT ON TABLE "MONITORING"."HISTORY_PARAMS"  IS 'История результатов проверки';

CREATE INDEX PARAM_HISTORY_I ON HISTORY_PARAMS (PARAMS_ID, VAL_DATE) REVERSE;

CREATE TABLE LOG_TAB (
    START_DATE DATE NOT NULL,
    SOURCE_NAME VARCHAR(50) NOT NULL,
    DETAIL_SOURCE_NAME VARCHAR(50),
    PARAM_ID INT,
    SHORT_LOG VARCHAR(50),
    DETAIL_LOG VARCHAR(250)
 );


CREATE TABLE PARAM_GROUP (
GROUP_ID INT NOT NULL,
"NAME" VARCHAR(256)
);
CONSTRAINT PARAM_GROUP_PK PRIMARY KEY (GROUP_ID) USING INDEX;
COMMENT ON COLUMN "MONITORING"."PARAM_GROUP"."GROUP_ID" IS 'идентификатор';
COMMENT ON COLUMN "MONITORING"."PARAM_GROUP"."NAME" IS 'название группы';
COMMENT ON TABLE "MONITORING"."PARAM_GROUP"  IS 'группы параметров';

CREATE TABLE PARAM_QUERY_UPDATE (	
QUERY_SQL VARCHAR(4000),
ID_DB_CONNECTION INT DEFAULT 1,
THREAD_ID INT DEFAULT 1,
PARAM_ID INT DEFAULT 0 NOT NULL,
ENABLED INT DEFAULT 0 NOT NULL,
QUERY_TYPE INT DEFAULT 1 NOT NULL,
IP VARCHAR(20),
LOGIN VARCHAR(15),
PASS VARCHAR(25),
PORT VARCHAR(5),
CLASS_ID INT DEFAULT 1 NOT NULL
);
COMMENT ON COLUMN PARAM_QUERY_UPDATE.QUERY_SQL IS 'Текст запроса, OID для SNMP ';
COMMENT ON COLUMN PARAM_QUERY_UPDATE.ID_DB_CONNECTION IS 'ссылка на таблицу соединений с базами данных';
COMMENT ON COLUMN PARAM_QUERY_UPDATE.THREAD_ID IS 'Номер потока, в котором выполняется запрос';
COMMENT ON COLUMN PARAM_QUERY_UPDATE.PARAM_ID IS 'Номер параметра из таблицы param';
COMMENT ON COLUMN PARAM_QUERY_UPDATE.ENABLED IS 'Доступность запроса: 0 - не запускать, 1 - запускать';
COMMENT ON COLUMN PARAM_QUERY_UPDATE.QUERY_TYPE IS 'SQL, SSH(sh, bash, perl ...)';
COMMENT ON COLUMN PARAM_QUERY_UPDATE.CLASS_ID IS 'ссылка на таблицу task_class';
COMMENT ON TABLE PARAM_QUERY_UPDATE  IS 'Список запросов, обновляющих значения параметров';

CREATE TABLE PARAMS (
    ID INT NOT NULL,
    "NAME" VARCHAR(300) NOT NULL,
    "COUNT" INT DEFAULT 1 NOT NULL,
    TIME_OUT INT DEFAULT 15 NOT NULL,
    GROUP_ID INT DEFAULT 0 NOT NULL,
    NOTE VARCHAR(4000),
    ORDER_ID INT,
    DIRECTION INT DEFAULT 1,
    ENABLED INT DEFAULT 1
);
    CONSTRAINT "PK_PARAMS_ID" PRIMARY KEY ("ID") USING INDEX;
 COMMENT ON COLUMN "PARAMS"."ID" IS 'идентификатор объекта мониторинга';
 COMMENT ON COLUMN "PARAMS"."NAME" IS 'название объекта мониторинга';
 COMMENT ON COLUMN "PARAMS"."COUNT" IS 'допустимый порог';
 COMMENT ON COLUMN "PARAMS"."TIME_OUT" IS 'интервал обновления';
 COMMENT ON COLUMN "PARAMS"."GROUP_ID" IS 'идентификатор группых';
 COMMENT ON COLUMN "PARAMS"."NOTE" IS 'описание';
 COMMENT ON COLUMN "PARAMS"."ORDER_ID" IS 'порядковый номер параметра в группе, для расположения в интерфейсе';
 COMMENT ON COLUMN "PARAMS"."DIRECTION" IS 'направление, в котором возрастает аварийная ситуациях';
 COMMENT ON COLUMN "PARAMS"."ENABLED" IS 'доступность параметра';
 COMMENT ON TABLE "PARAMS"  IS 'список объектов мониторинга';

 CREATE TABLE QUERY_TYPE (
	ID INT NOT NULL,
	"NAME" VARCHAR(15) NOT NULL,
	NOTE VARCHAR(150)
   );

CREATE TABLE SCHEDULE(
	SCHEDULE_ID INT NOT NULL,
	SCHEDULE_NAME VARCHAR(300) NOT NULL,
	PARAM_ID INT NOT NULL,
	"CONDITION" VARCHAR(2) NOT NULL,
	THRESHOLD INT NOT NULL,
	REPETITIONS INT DEFAULT 1 NOT NULL,
	"PERIOD" INT DEFAULT 1 NOT NULL,
	NOTE VARCHAR(4000),
	ENABLED INT DEFAULT 1 NOT NULL,
	TASK_ID INT NOT NULL,
        USE_RESULT INT DEFAULT 0 NOT NULL
   );

CREATE TABLE SCHEDULER_LOG (
    SCHEDULE_ID INT NOT NULL,
    NOTE VARCHAR(2) NOT NULL,
    LOG_DATE TIMESTAMP
 );

CREATE TABLE SMS_CLASS(
    CLASS INT,
    PARAM_ID INT
);

CREATE TABLE SMS_PHONE (
    "NAME" VARCHAR(50),
    PHONE VARCHAR(11),
    "CLASS" INT,
    EMAIL VARCHAR(50)
); 

CREATE TABLE TASK (
    TASK_ID INT NOT NULL,
    TASK_PRIORITY INT,
    PARAM_ID INT,
    QUERY VARCHAR(4000),
    CLASS_ID INT DEFAULT 1 NOT NULL,
    ID_DB_CONNECTION INT,
    IP VARCHAR(20),
    PORT VARCHAR(5),
    LOGIN VARCHAR(15),
    PASS VARCHAR(15),
    ENABLED INT DEFAULT 0 NOT NULL
 );

CREATE TABLE TASK_CLASS (
    ID INT NOT NULL,
    "NAME" VARCHAR(100) NOT NULL,
    NOTE VARCHAR(150)
);

CREATE TABLE THREAD_LIST (
    ID INT NOT NULL,
    "NAME" VARCHAR(200),
    "INTERVAL" INT,
    ENABLED INT DEFAULT 0
 );
